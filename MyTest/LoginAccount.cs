///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The LoginAccount recording.
    /// </summary>
    [TestModule("ee1d19f7-62ef-4d18-a643-a91f05df1550", ModuleType.Recording, 1)]
    public partial class LoginAccount : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyTestRepository repository.
        /// </summary>
        public static MyTestRepository repo = MyTestRepository.Instance;

        static LoginAccount instance = new LoginAccount();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public LoginAccount()
        {
            varUsername = "";
            varPassword = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static LoginAccount Instance
        {
            get { return instance; }
        }

#region Variables

        string _varUsername;

        /// <summary>
        /// Gets or sets the value of variable varUsername.
        /// </summary>
        [TestVariable("b7f9df46-6e60-402b-b439-3faa4b7631bd")]
        public string varUsername
        {
            get { return _varUsername; }
            set { _varUsername = value; }
        }

        string _varPassword;

        /// <summary>
        /// Gets or sets the value of variable varPassword.
        /// </summary>
        [TestVariable("ef8195ff-c71a-4c0b-a21d-afc99eaec667")]
        public string varPassword
        {
            get { return _varPassword; }
            set { _varPassword = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RakutenKdreams.TxtUsername' at Center.", repo.RakutenKdreams.TxtUsernameInfo, new RecordItemIndex(0));
            repo.RakutenKdreams.TxtUsername.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varUsername' with focus on 'RakutenKdreams.TxtUsername'.", repo.RakutenKdreams.TxtUsernameInfo, new RecordItemIndex(1));
            repo.RakutenKdreams.TxtUsername.PressKeys(varUsername);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RakutenKdreams.TxtPassword' at Center.", repo.RakutenKdreams.TxtPasswordInfo, new RecordItemIndex(2));
            repo.RakutenKdreams.TxtPassword.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varPassword' with focus on 'RakutenKdreams.TxtPassword'.", repo.RakutenKdreams.TxtPasswordInfo, new RecordItemIndex(3));
            repo.RakutenKdreams.TxtPassword.PressKeys(varPassword);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RakutenKdreams.BtnLogin' at Center.", repo.RakutenKdreams.BtnLoginInfo, new RecordItemIndex(4));
            repo.RakutenKdreams.BtnLogin.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(5));
            Delay.Duration(1000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
